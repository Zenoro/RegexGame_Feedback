{
	"m_DescList":[
		"我们赋予了一些符号特殊含义，例如：",
		"<color=#FF68DD>*</color>     匹配上一个正则表达式零次或多次",
		"<color=#FF68DD>?</color>    匹配上一个元素零次或一次",
		"<color=#3173FF>[]</color>    指定一组字符位点",
		"",
		"但是，这样做也引入了新的问题。",
		"如果我想匹配字符串 \"interesting, <color=#3c3cff>[?*]</color> 123\" 蓝色的部分，我应该如何编写正则表达式呢？",
		"",
		"多数情况下，使用反斜杠 \"\\\"，强制要求后面一个字符使用其原始含义。",
		"<color=#666666>qwerty键盘回车键上方</color>",
		"",
		"例如，<color=#AB2800>\\[\\?\\*\\]</color> 的匹配结果为",
		"<color=#666666>interesting,</color> <color=#3c3cff>[?*]</color> <color=#666666>123</color>",
		"",
		"<b>常见的转义符号</b>",
		"[ ] ( ) { } . * + ? ^ $ | \\ \" '",
		"这些符号使用 \\ 来转译",
		"例如，使用 <color=#AB2800>\\\\</color> 匹配 <color=#3c3cff>C:\\Windows\\xxx</color> 结果为: ",
		"C:<color=#3c3cff>\\</color>Windows\\xxx",
		"C:\\Windows<color=#3c3cff>\\</color>xxx",
		"",
		"<b>预定义字符类或控制字符</b>",
		"\\t 匹配制表符 \\u0009",
		"\\n 匹配换行符 \\u000A",
		"\\r 匹配回车符 \\u000D",
		"",
		"<b>进制表示转义</b>",
		"\\unnnn 例如，\\u0009表示 unicode 编码 9 对应的字符",
		"\\unnnn 可以强制编码一些不可见字符，emoji 和 数学符号",
		"",
		"",
		"<b>逐字字符串</b>",
		"在 C# 中，以下两个字符串声明是等价的。",
		"<color=#3c3cff>string</color> str = <color=#a64444>\"! \\\" \\' ?\"</color>;",
		"<color=#3c3cff>string</color> str = <color=#a64444>@\"! \"\" ' ?\"</color>;",
		"以 @ 开头的声明方式，为逐字字符串。逐字字符串中，\"\" 被视为 \\\", 与默认的字符串转义写法存在一些差异。",
		"此做法和其它编程语言有一些差异，为统一起见游戏本体均使用<b>默认的字符串转义写法</b>，不采取逐字字符串写法。",
		"",
		"现在，期望检查连续的任意两个相邻字符，如果前1个字符为 [ ] ( ) { } . * + ? ^ $ | \\ \" ' 其中任意一个，后一个字符不为上述特殊字符，则匹配成功。",
		"",
		"",
		"对于100%的输入数据，为了降低题目难度，约定以下规则：",
		"1. 符号均为英文半角符号",
		"2. 每个测试用例可能存在多个符合要求的匹配结果",
		"",
		"",
		"请构造一个正则表达式使之通过右侧所有测试。",
		""
	],
	"m_SystemLanguage":"ChineseSimplified"
}