{
	"m_DescList":[
		"我們賦予了一些符號特殊含義，例如：",
		"<color=#FF68DD>*</color>     匹配上一個正則表達式零次或多次",
		"<color=#FF68DD>?</color>    匹配上一個元素零次或一次",
		"<color=#3173FF>[]</color>    指定一組字符位點",
		"",
		"但是，這樣做也引入了新的問題。",
		"如果我想匹配字串 \"interesting, <color=#3c3cff>[?*]</color> 123\" 藍色的部分，我應該如何編寫正則表達式呢？",
		"",
		"多數情況下，使用反斜線 \"\"，強制要求後面一個字符使用其原始含義。",
		"<color=#666666>qwerty鍵盤回車鍵上方</color>",
		"",
		"例如，<color=#AB2800>\\[\\?\\*\\]</color> 的匹配結果為",
		"<color=#666666>interesting,</color> <color=#3c3cff>[?*]</color> <color=#666666>123</color>",
		"",
		"<b>常見的跳脫符號</b>",
		"[ ] ( ) { } . * + ? ^ $ | \\ \" '",
		"這些符號使用 \\ 來跳脫",
		"例如，使用 <color=#AB2800>\\\\</color> 匹配 <color=#3c3cff>C:\\Windows\\xxx</color> 結果為:",
		"C:<color=#3c3cff>\\</color>Windows\\xxx",
		"C:\\Windows<color=#3c3cff>\\</color>xxx",
		"",
		"<b>預定義字元類別或控制字元</b>",
		"\\t 匹配定位字元 \\u0009",
		"\\n 匹配換行字元 \\u000A",
		"\\r 匹配回車字元 \\u000D",
		"",
		"<b>進位表示跳脫</b>",
		"\\unnnn 例如，\\u0009表示 unicode 編碼 9 對應的字元",
		"\\unnnn 可以強制編碼一些不可見字元、emoji 和數學符號",
		"",
		"<b>逐字字串 (Verbatim Strings)</b>",
		"在 C# 中，以下兩個字串宣告是等價的。",
		"<color=#3c3cff>string</color> str = <color=#a64444>\"! \" \\' ?\"</color>;",
		"<color=#3c3cff>string</color> str = <color=#a64444>@\"! \"\" ' ?\"</color>;",
		"以 @ 開頭的宣告方式，為逐字字串。逐字字串中，\"\" 被視為 \", 與預設的字串跳脫寫法存在一些差異。",
		"此做法和其它程式語言有一些差異，為統一起見遊戲本體均使用<b>預設的字串跳脫寫法</b>，不採取逐字字串寫法。",
		"",
		"現在，期望檢查連續的任意兩個相鄰字元，如果前1個字元為 [ ] ( ) { } . * + ? ^ $ | \\ \" ' 其中任意一個，後一個字元不為上述特殊字元，則匹配成功。",
		"",
		"對於100%的輸入資料，為降低題目難度，約定以下規則：",
		"1. 符號均為英文半形符號",
		"2. 每個測試用例可能存在多個符合要求的匹配結果",
		"",
		"",
		"請構造一個正則表達式使之通過右側所有測試。"
	],
	"m_SystemLanguage":"ChineseTraditional"
}