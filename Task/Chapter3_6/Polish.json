{
	"m_DescList":[
		"Przypisujemy niektórym symbolom specjalne znaczenie, na przykład:  ",
		"<color=#FF68DD>*</color>      Dopasowuje poprzednie wyrażenie regularne zero lub więcej razy  ",
		"<color=#FF68DD>?</color>     Dopasowuje poprzedni element zero lub jeden raz  ",
		"<color=#3173FF>[]</color>     Określa zestaw znaków w danym miejscu  ",
		"",
		"Jednakże wprowadza to nowy problem.  ",
		"Jak napisać wyrażenie regularne, aby dopasować niebieską część ciągu \"interesting, <color=#3c3cff>[?*]</color> 123\"?  ",
		"",
		"W większości przypadków używa się ukośnika wstecznego \"\", aby wymusić dosłowne znaczenie następującego znaku.  ",
		"<color=#666666>Nad klawiszem Enter w układzie klawiatury qwerty</color>  ",
		"",
		"Na przykład, <color=#AB2800>\\[\\?\\*\\]</color> dopasowuje:  ",
		"<color=#666666>interesting,</color> <color=#3c3cff>[?*]</color> <color=#666666>123</color>",
		"",
		"<b>Często escapowane symbole</b>  ",
		"[ ] ( ) { } . * + ? ^ $ | \\ \" '  ",
		"Te symbole wymagają escapowania za pomocą \\  ",
		"Przykład: Użycie <color=#AB2800>\\\\</color> do dopasowania <color=#3c3cff>C:\\Windows\\xxx</color> daje:  ",
		"C:<color=#3c3cff>\\</color>Windows\\xxx  ",
		"C:\\Windows<color=#3c3cff>\\</color>xxx  ",
		"",
		"<b>Predefiniowane klasy znaków lub znaki sterujące</b>  ",
		"\\t Dopasowuje tabulator \\u0009  ",
		"\\n Dopasowuje znak nowej linii \\u000A  ",
		"\\r Dopasowuje znak powrotu karetki \\u000D  ",
		"",
		"<b>Escape w notacji heksadecymalnej</b>  ",
		"\\unnnn Np. \\u0009 reprezentuje znak Unicode o kodzie 9  ",
		"\\unnnn może wymuszać kodowanie niewidzialnych znaków, emoji i symboli matematycznych  ",
		"",
		"<b>Ciągi dosłowne (verbatim strings)</b>  ",
		"W C# poniższe deklaracje ciągów są równoważne:  ",
		"<color=#3c3cff>string</color> str = <color=#a64444>\"! \" \\' ?\"</color>;  ",
		"<color=#3c3cff>string</color> str = <color=#a64444>@\"! \"\" ' ?\"</color>;  ",
		"Deklaracja z prefiksem @ tworzy ciąg dosłowny. W takich ciągach \"\" jest traktowane jako \", co różni się od domyślnego escapowania ciągów.  ",
		"Dla zachowania spójności gra używa <b>domyślnego escapowania ciągów</b>, a nie składni ciągów dosłownych.  ",
		"",
		"Teraz oczekujemy sprawdzenia dowolnych dwóch sąsiednich znaków: jeśli pierwszy znak należy do [ ] ( ) { } . * + ? ^ $ | \\ \" ', a następny znak NIE należy do tej grupy specjalnych znaków, dopasowanie jest udane.  ",
		"",
		"Dla 100% danych wejściowych (aby zmniejszyć trudność zadania) obowiązują reguły:  ",
		"1. Wszystkie symbole są angielskimi znakami połowkowymi  ",
		"2. Każdy przypadek testowy może zawierać wiele pasujących wyników  ",
		"",
		"",
		"Proszę skonstruować wyrażenie regularne, które przejdzie wszystkie testy po prawej stronie."
	],
	"m_SystemLanguage":"Polish"
}