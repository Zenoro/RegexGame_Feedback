{
	"m_DescList":[
		"Как известно, учебники всегда преподносят материал проще, чем реальные приложения.  ",
		"Как упоминалось ранее, <color=#05C3BA>( | )</color> может соответствовать нескольким различным шаблонам. Теперь мы разберём более сложные вложенные регулярные выражения.  ",
		"",
		"<color=#05C3BA>( ( ) )</color> представляет вложенные регулярные выражения.  ",
		"",
		"<color=#05C3BA>((</color><color=#AB2800>0 </color><color=#05C3BA>| </color><color=#AB2800>1</color><color=#05C3BA>) </color><color=#AB2800>3 </color><color=#05C3BA>| </color><color=#AB2800>_</color><color=#05C3BA>)</color> состоит из двух уровней вложенности и может быть разбит на:  ",
		"1. <color=#05C3BA>(</color><color=#AB2800>0 </color><color=#05C3BA>| </color><color=#AB2800>1</color><color=#05C3BA>) </color><color=#AB2800>3</color>   Первый символ \"0\" или \"1\", второй — \"3\"  ",
		"2. <color=#AB2800>_</color>             Символ \"_\"  ",
		"",
		"Например, <color=#05C3BA>((</color><color=#AB2800>0 </color><color=#05C3BA>| </color><color=#AB2800>1</color><color=#05C3BA>) </color><color=#AB2800>3 </color><color=#05C3BA>| </color><color=#AB2800>_</color><color=#05C3BA>)</color> соответствует в строке <color=#3c3cff>03134_</color>:  ",
		"<color=#3c3cff>03</color><color=#666666>134_</color>     Соответствует <color=#05C3BA>(</color><color=#AB2800>0 </color><color=#05C3BA>| </color><color=#AB2800>1</color><color=#05C3BA>) </color><color=#AB2800>3</color>",
		"<color=#666666>03</color><color=#3c3cff>13</color><color=#666666>4_</color>     Соответствует <color=#05C3BA>(</color><color=#AB2800>0 </color><color=#05C3BA>| </color><color=#AB2800>1</color><color=#05C3BA>) </color><color=#AB2800>3</color>",
		"<color=#666666>03134</color><color=#3c3cff>_</color>     Соответствует <color=#AB2800>_</color>",
		"",
		"<color=#05C3BA>()</color> позволяет создавать многоуровневые вложенные выражения, например, <color=#05C3BA>(</color><color=#3173FF>[</color><color=#AB2800>0</color><color=#3173FF>-</color><color=#AB2800>9</color><color=#3173FF>]</color><color=#FF68DD>+ </color><color=#05C3BA>| (</color><color=#AB2800>yes </color><color=#05C3BA>| </color><color=#AB2800>no</color><color=#05C3BA>)</color><color=#3173FF>\\s</color><color=#FF68DD>+ </color><color=#05C3BA>| </color><color=#AB2800>a</color><color=#FF68DD>{2,}</color><color=#3173FF>\\d</color><color=#FF68DD>?</color><color=#05C3BA>)</color> является валидным и означает:  ",
		"1. <color=#3173FF>[</color><color=#AB2800>0</color><color=#3173FF>-</color><color=#AB2800>9</color><color=#3173FF>]</color><color=#FF68DD>+</color>",
		"2. <color=#05C3BA>(</color><color=#AB2800>yes </color><color=#05C3BA>| </color><color=#AB2800>no</color><color=#05C3BA>)</color><color=#3173FF>\\s</color><color=#FF68DD>+</color>",
		"3. <color=#AB2800>a</color><color=#FF68DD>{2,}</color><color=#3173FF>\\d</color><color=#FF68DD>?</color>",
		"В сложных сценариях глубокая вложенность значительно усложняет понимание и отладку.  ",
		"",
		"В коде C# стандартное объявление поля включает:  ",
		"1. Модификатор доступа: ноль или один из <color=#3c3cff>public private internal protected</color>  ",
		"2. Статический модификатор: <color=#3c3cff>static</color> (опционально; указывает на статическое поле)  ",
		"3. Модификатор readonly: <color=#3c3cff>readonly</color> (опционально; указывает на поле только для чтения)  ",
		"4. Имя типа (обязательно): Начинается с буквы в верхнем/нижнем регистре или подчёркивания, за которым следуют символы слова  ",
		"5. Имя переменной (обязательно): Начинается с буквы в верхнем/нижнем регистре или подчёркивания, за которым следуют символы слова  ",
		"6. Точка с запятой \";\" (завершает объявление)  ",
		"",
		"Элементы разделяются пробелами. Хотя обычно используют один пробел, множественные пробелы остаются допустимыми.  ",
		"",
		"<b>Валидные объявления</b>:  ",
		"<color=#3c3cff>public static readonly</color> object aa;  ",
		"<color=#3c3cff>protected byte</color> _1   ;  ",
		"<color=#3c3cff>internal readonly long</color> bcd;  ",
		"<color=#3c3cff>short</color> m_Value;  ",
		"",
		"<b>Невалидные объявления</b>:  ",
		"<color=#3c3cff>public</color> object; <color=#117722>// Отсутствует имя переменной</color>  ",
		"<color=#3c3cff>short</color> m_Value <color=#117722>// Отсутствует точка с запятой ;</color>  ",
		"<color=#3c3cff>public static readonly</color> object a!#; <color=#117722>// Имя содержит недопустимые символы ! #</color>  ",
		"",
		"Задача: создать регулярное выражение для проверки валидности объявлений полей, как это делает компилятор.  ",
		"",
		"<color=#666666>Проявите свои наблюдательные способности для \"программирования под ответ\" (вычёркиваем)</color>  ",
		"",
		"<color=#666666>Подсказка: Достаточно двухуровневого шаблона: (() | () | ()) () (). Оптимальность не требуется.</color>  ",
		"",
		"Для снижения сложности 100% тестовых данных соответствуют правилам:  ",
		"1. Отсутствие дженериков в типах (например, нет \"<\" или \">\" в \"List<int>\")  ",
		"2. Каждый ввод содержит ровно одно объявление поля  ",
		"3. Некорректные вводы не выводятся  ",
		"",
		"<color=#666666>Задача сложная — пропустите, если не получается...</color>  ",
		"",
		"",
		"Постройте регулярное выражение, проходящее все тесты справа. "
	],
	"m_SystemLanguage":"Russian"
}