{
	"m_DescList":[
		"Herkesin bildiği gibi, ders kitaplarında öğretilenler gerçek dünya uygulamalarından her zaman daha basittir.",
		"Daha önce de belirtildiği gibi, <color=#05C3BA>( | )</color> birkaç farklı içeriği eşleştirmek için kullanılabilir. Şimdi, daha karmaşık iç içe geçmiş düzenli ifadeleri parçalara ayıracağız.",
		"",
		"<color=#05C3BA>( ( ) )</color> iç içe geçmiş düzenli ifadeleri ifade eder.",
		"",
		"<color=#05C3BA>((</color><color=#AB2800>0 </color><color=#05C3BA>| </color><color=#AB2800>1</color><color=#05C3BA>) </color><color=#AB2800>3 </color><color=#05C3BA>| </color><color=#AB2800>_</color><color=#05C3BA>)</color> iki katmanlı iç içe geçmiş bir düzenli ifadeden oluşur ve şu şekilde parçalara ayrılabilir:",
		"1.  <color=#05C3BA>(</color><color=#AB2800>0 </color><color=#05C3BA>| </color><color=#AB2800>1</color><color=#05C3BA>) </color><color=#AB2800>3</color>    İlk karakter \"0\" veya \"1\", ikinci karakter \"3\"",
		"2.  <color=#AB2800>_</color>              \"_\" karakteri",
		"",
		"Örneğin, <color=#05C3BA>((</color><color=#AB2800>0 </color><color=#05C3BA>| </color><color=#AB2800>1</color><color=#05C3BA>) </color><color=#AB2800>3 </color><color=#05C3BA>| </color><color=#AB2800>_</color><color=#05C3BA>)</color> şu metindeki (<color=#3c3cff>03134_</color>) şunları eşler:",
		"<color=#3c3cff>03</color><color=#666666>134_</color>      <color=#05C3BA>(</color><color=#AB2800>0 </color><color=#05C3BA>| </color><color=#AB2800>1</color><color=#05C3BA>) </color><color=#AB2800>3</color> ile eşleşir",
		"<color=#666666>03</color><color=#3c3cff>13</color><color=#666666>4_</color>      <color=#05C3BA>(</color><color=#AB2800>0 </color><color=#05C3BA>| </color><color=#AB2800>1</color><color=#05C3BA>) </color><color=#AB2800>3</color> ile eşleşir",
		"<color=#666666>03134</color><color=#3c3cff>_</color>      <color=#AB2800>_</color> ile eşleşir",
		"",
		"<color=#05C3BA>()</color> karmaşık çok katmanlı düzenli ifadelerin iç içe geçmesine izin verir, örneğin <color=#05C3BA>(</color><color=#3173FF>[</color><color=#AB2800>0</color><color=#3173FF>-</color><color=#AB2800>9</color><color=#3173FF>]</color><color=#FF68DD>+ </color><color=#05C3BA>| (</color><color=#AB2800>yes </color><color=#05C3BA>| </color><color=#AB2800>no</color><color=#05C3BA>)</color><color=#3173FF>\\s</color><color=#FF68DD>+ </color><color=#05C3BA>| </color><color=#AB2800>a</color><color=#FF68DD>{2,}</color><color=#3173FF>\\d</color><color=#FF68DD>?</color><color=#05C3BA>)</color> geçerli bir düzenli ifadedir ve şu anlama gelir:",
		"1.  <color=#3173FF>[</color><color=#AB2800>0</color><color=#3173FF>-</color><color=#AB2800>9</color><color=#3173FF>]</color><color=#FF68DD>+</color>",
		"2.  <color=#05C3BA>(</color><color=#AB2800>yes </color><color=#05C3BA>| </color><color=#AB2800>no</color><color=#05C3BA>)</color><color=#3173FF>\\s</color><color=#FF68DD>+</color>",
		"3.  <color=#AB2800>a</color><color=#FF68DD>{2,}</color><color=#3173FF>\\d</color><color=#FF68DD>?</color>",
		"Çok karmaşık uygulama senaryolarında, pek çok katman iç içe geçmiş düzenli ifadeler bulunur; bu da anlama ve hata ayıklama zorluğunu katlanarak artırır.",
		"",
		"C# kodunda, tipik bir alan bildirimi aşağıdaki bileşenlerden oluşur:",
		"1.  Erişim düzeyi: <color=#3c3cff>public private internal protected</color> içinden sıfır veya bir tane",
		"2.  Statik işaretçi: <color=#3c3cff>static</color>, bulunabilir veya bulunmayabilir. Varsa statik alan, yoksa örnek (instance) alandır.",
		"3.  Salt okunur işaretçi: <color=#3c3cff>readonly</color>, bulunabilir veya bulunmayabilir. Varsa alan salt okunur (yazılamaz), yoksa yapıcı (constructor) bittikten sonra okunabilir ve yazılabilirdir.",
		"4.  Değişken tür adı: Mutlaka bulunmalıdır. Genellikle ilk karakter büyük/küçük İngilizce harf veya alt çizgi olup, ardından bir dizi sözcük karakteri gelir.",
		"5.  Değişken adı: Mutlaka bulunmalıdır. Genellikle ilk karakter büyük/küçük İngilizce harf veya alt çizgi olup, ardından bir dizi sözcük karakteri gelir.",
		"6.  Bir \";\" (noktalı virgül) ifadenin sonunu belirtir.",
		"",
		"Farklı içerikler boşluk karakterleri ile birbirine bağlanır. Çoğu programcı tek boşluk kullanır ancak birden fazla boşluk da geçerli bir bildirimdir.",
		"",
		"Aşağıdaki bildirimlerin tümü <b>geçerli bildirimlerdir</b>:",
		"<color=#3c3cff>public static readonly</color> object aa;",
		"<color=#3c3cff>protected byte</color> _1   ;",
		"<color=#3c3cff>internal readonly long</color> bcd;",
		"<color=#3c3cff>short</color> m_Value;",
		"",
		"Aşağıdaki bildirimlerin tümü <b>geçersiz bildirimlerdir</b>:",
		"<color=#3c3cff>public</color> object; <color=#117722>// Değişken adı eksik</color>",
		"<color=#3c3cff>short</color> m_Value <color=#117722>// Noktalı virgül ; eksik</color>",
		"<color=#3c3cff>public static readonly</color> object a!#; <color=#117722>// Değişken adı sözcük olmayan karakterler (! #) içeriyor</color>",
		"",
		"Şimdi, derleyicinin geçerli alan bildirimlerini eşleştirmesini taklit eden bir düzenli ifade tasarlamak istiyoruz.",
		"",
		"<color=#666666>Şimdi, hayret verici gözlem gücünüzü kullanın, cevaba yönelik programlama yapın (yani)</color>",
		"",
		"<color=#666666>İpucu: Bu problem için sadece iç içe geçme seviyesi 2 olan bir (() | () | ()) () () şablonunu kullanmak yeterlidir. Problem en kısa düzenli ifadeyi gerektirmez.</color>",
		"",
		"%100 giriş verisi için, zorluğu azaltmak amacıyla aşağıdaki kurallar kabul edilmiştir:",
		"1.  Değişken türlerinde jenerik (generic) yoktur; \"List<int>\" içindeki \"<\" ve \">\" gibi karakterler bulunmaz.",
		"2.  Her giriş verisinde sadece bir tane kontrol edilecek alan bildirimi vardır.",
		"3.  Giriş verisi kurallara uymayan içerik içeriyorsa, herhangi bir çıktı üretilmez.",
		"",
		"<color=#666666>Bu problem zor, başaramazsanız geçin...</color>",
		"",
		"",
		"Sağdaki tüm testleri geçen bir düzenli ifade oluşturun."
	],
	"m_SystemLanguage":"Turkish"
}