{
	"m_DescList":[
		"上次使用 <color=#AB2800>Sna.</color><color=#FF68DD>*</color><color=#AB2800>ke</color> 匹配 <color=#3c3cff>Snake Snaake</color> 时，",
		"返回结果为 <color=#3c3cff>Snake Snaake</color> 直接一次拿到了两条蛇，差一点被咬了一口。/(ㄒoㄒ)/~~",
		"",
		"蛇们相互缠绕在了一起，",
		"<color=#3c3cff>Snasssnkeake</color> 预期匹配结果为：",
		"<color=#3c3cff>Snasssnke</color><color=#666666>ake</color>",
		"",
		"这一次以 <color=#3c3cff>Sna</color> 开头，当找到首个 <color=#3c3cff>ke</color> 时匹配结束。",
		"",
		"<b>贪婪匹配</b>",
		"在正则表达式中，<color=#FF68DD>*</color> 会启用贪婪匹配，它会尝试匹配尽可能多的字符。",
		"",
		"例如，<color=#AB2800>BA.</color><color=#FF68DD>*</color><color=#AB2800>B</color> 匹配 <color=#3c3cff>BABAB</color> 中的 <color=#3c3cff>BABAB</color>，而不是仅匹配一部分 \"BAB\"。<color=#FF68DD>*</color> 会尽可能的捕获更多内容。",
		"",
		"<b>惰性匹配</b>",
		"在正则表达式中，<color=#FF68DD>*?</color> 会启用非贪婪匹配，它会尽可能少地匹配字符。",
		"",
		"例如，<color=#AB2800>BA.</color><color=#FF68DD>*</color><color=#AB2800>B</color> 匹配 <color=#3c3cff>BABAB</color> 返回两个结果，",
		"<color=#3c3cff>BAB</color><color=#666666>AB</color>",
		"<color=#666666>BA</color><color=#3c3cff>BAB</color>",
		"",
		"对于100%的输入数据，约定以下规则：",
		"1. 贪婪匹配 与 惰性匹配 混合使用时难度过高，本题使用 惰性匹配 即可通过全部测试用例",
		"2. 每次仅拿一条蛇",
		"3. 预期匹配的内容为 \"Sna\" 开头，中间连续若干个字符，以 \"ke\" 结尾",
		"",
		"",
		"请构造一个正则表达式使之通过右侧所有测试。",
		""
	],
	"m_SystemLanguage":"ChineseSimplified"
}