{
	"m_DescList":[
		"<b>バランシンググループ（Balancing Group）</b> は、ネスト構造のマッチングに使用されます。",
		"例えば、以下のようにペアで出現する記号 <color=#3c3cff>()</color> 括弧は次のように組み合わせることができます：",
		"<color=#3c3cff>(</color> <color=#e06600>(</color>1+1<color=#e06600>)</color> * 2 + 3 <color=#3c3cff>)</color> / 4",
		"<color=#666666>ペアの括弧が同じ色でマークされています</color>",
		"",
		"これは、名前付きキャプチャグループとスタックメカニズムを使用してネストレベルを追跡し、最終的にペアとなる記号のチェックを完了します。",
		"",
		"例えば、上記の例をマッチさせるために以下の式を使用できます：",
		"<color=#AB2800>\\(</color>",
		"    <color=#05C3BA>( </color><color=#3173FF>[^</color><color=#05C3BA>()</color><color=#3173FF>]</color><color=#FF68DD>+ </color><color=#05C3BA>| </color><color=#AB2800>\\( </color><color=#05C3BA>(?</color><color=#AB2800><Depth></color><color=#05C3BA>) | </color><color=#AB2800>\\) </color><color=#05C3BA>(?</color><color=#AB2800><-Depth></color><color=#05C3BA>) )</color><color=#FF68DD>*</color>",
		"    <color=#05C3BA>(?(</color><color=#AB2800>Depth</color><color=#05C3BA>)(?!))</color>",
		"<color=#AB2800>\\)</color>",
		"",
		"結果：",
		"<color=#3c3cff>( (1+1) * 2 + 3 )</color><color=#666666> / 4</color>",
		"",
		"上記の式は以下の部分に分解できます：",
		"<color=#AB2800>\\(</color> <color=#AB2800>\\)</color>                  先頭と末尾がそれぞれ対応する括弧文字",
		"                       にマッチ",
		"<color=#3173FF>[^</color><color=#05C3BA>()</color><color=#3173FF>]</color><color=#FF68DD>+</color>               括弧以外の任意の文字にマッチ",
		"<color=#AB2800>\\( </color><color=#05C3BA>(?</color><color=#AB2800><Depth></color>    \"(\" 文字が出現すると、Depthキャプチャグ",
		"                       ループの<b>スタックカウンタが+1</b>",
		"<color=#AB2800>\\) </color><color=#05C3BA>(?</color><color=#AB2800><-Depth></color>   \")\" 文字が出現すると、Depthキャプチャグ",
		"                       ループの<b>スタックカウンタが-1</b>",
		"<color=#05C3BA>( )</color><color=#FF68DD>*</color>                   括弧内の部分式を複数回繰り返し",
		"<color=#05C3BA>(?(</color><color=#AB2800>Depth</color><color=#05C3BA>)(?!))</color>  バランスチェック。Depthキャプチャグルー",
		"                       プのスタックカウンタが0でない場合、",
		"                       <color=#05C3BA>(?!)</color> 操作によりマッチングが失敗する",
		"",
		"バランシンググループを使用することで、ペアで出現するネストされた内容を簡単にマッチさせることができます。",
		"",
		"以下のテキストには、ペアとなる中括弧が多数含まれています。例：",
		"<color=#3c3cff>{</color>",
		"    data: <color=#e06600>{</color>",
		"        \"array\": [ 1, 2, 3 ]",
		"    <color=#e06600>}</color>,",
		"    value: <color=#ee3300>{</color>",
		"        \"a\": \"1\"",
		"    <color=#ee3300>}</color>",
		"<color=#3c3cff>}</color>",
		"",
		"{ と } のペア関係のみをチェックしてみましょう。",
		"<color=#666666>ペアの内容が同じ色でマークされています</color>",
		"",
		"テストケースから以下の内容を抽出することを期待しています：",
		"1. 最も外側が一組の { } で囲まれている",
		"2. 内部に { } がネストされた文字列がいくつかある",
		"3. 全ての { } はペアでマッチする必要がある内容と見なされ、引用符内には { } は含まれない",
		"",
		"<color=#ee3300>警告！バランシンググループで貪欲マッチングが使用されているため、一部の環境ではタイムアウトエラーが発生する可能性があります</color>",
		"エラーが発生した場合は、設定の<b>マッチングタイムアウト</b>時間を適切に大きく設定してください",
		"",
		"",
		"右側のすべてのテストを通過する正規表現を構築してください。"
	],
	"m_SystemLanguage":"Japanese"
}