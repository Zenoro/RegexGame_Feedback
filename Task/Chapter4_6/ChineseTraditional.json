{
	"m_DescList":[
		"JSON 是一種輕量級的資料交換格式，廣泛用於資料儲存和傳輸。",
		"",
		"資料由鍵值對組成，鍵必須是字串，值可以是字串、數字、布林值、陣列、物件或 null。",
		"",
		"例如，下文展示了一段 JSON 資料：",
		"<color=#3c3cff>{</color>",
		"  <color=#3c3cff>\"key\"</color>: <color=#33aa55>1</color>,",
		"  <color=#3c3cff>\"array\"</color>: <color=#33aa55>[1</color>,<color=#33aa55>2]</color>,",
		"  <color=#3c3cff>\"Child\"</color>: <color=#33aa55>{</color>",
		"    <color=#3c3cff>\"Child2\"</color>: <color=#e06600>{}</color>",
		"  <color=#33aa55>}</color>，",
		"  <color=#3c3cff>\"string\"</color>: <color=#ee3300>\"[]{}\"</color>",
		"  <color=#3c3cff>\"Boolean\"</color>: <color=#3111aa>true</color>,",
		"<color=#3c3cff>}</color>",
		"",
		"最外側為一組對稱的 <color=#3c3cff>{ }</color>",
		"<color=#3c3cff>\"key\"</color>, <color=#3c3cff>\"array\"</color>, <color=#3c3cff>\"Child\"</color>, <color=#3c3cff>\"Child2\"</color>, <color=#3c3cff>\"string\"</color> 為鍵，",
		"",
		"<color=#33aa55>1</color>      為數字，",
		"<color=#33aa55>[ ]</color>     為陣列，",
		"<color=#3111aa>true</color>   為布林值，",
		"<color=#ee3300>\"[]{}\"</color> 為字串，",
		"<color=#e06600>{}</color>      為物件",
		"",
		"不難發現，最外側一組對稱的 <color=#3c3cff>{ }</color> 是物件的含義。上述範例中，匹配的大括號使用相同顏色標記。",
		"物件和陣列內可以按照上述格式繼續巢狀 字串、數字、布林值、陣列、物件或 null。",
		"",
		"由於 <color=#33aa55>[ ]</color> <color=#3c3cff>{ }</color> <color=#ee3300>\" \"</color> 成對兒出現，可以用平衡組 (balancing group) 簡單檢測下 JSON 資料是否合法。",
		"",
		"為了簡化問題，做出以下約定：",
		"1.  僅作簡單的數量檢查，不做複雜的格式檢查。",
		"    例如: { \"key\": [, \"key2\": ] } 雖然格式錯誤，但是關鍵字成對兒出現，平衡組檢查通過",
		"2.  <color=#ee3300>\"[]{}\"</color> 字串內的符號不計入平衡組的匹配數量，被忽略",
		"3.  優先面向答案編程 (solution-oriented programming)，僅需通過測試用例即可。無需製作一個100%檢查所有JSON資料的正規表示式。",
		"",
		"<color=#666666>此題較難，實在不行就跳過...</color>",
		"",
		"",
		"請構造一個正規表示式使之通過右側所有測試。"
	],
	"m_SystemLanguage":"ChineseTraditional"
}