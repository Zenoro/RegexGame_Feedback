{
	"m_DescList":[
		"JSON to lekki format wymiany danych, szeroko stosowany w przechowywaniu i przesyłaniu informacji.",
		"",
		"Dane składają się z par klucz-wartość. Klucze muszą być ciągami znaków, a wartościami mogą być ciągi znaków, liczby, wartości logiczne (Boolean), tablice, obiekty lub wartość null.",
		"",
		"Na przykład, poniższy fragment prezentuje dane JSON:",
		"<color=#3c3cff>{</color>",
		"  <color=#3c3cff>\"key\"</color>: <color=#33aa55>1</color>,",
		"  <color=#3c3cff>\"array\"</color>: <color=#33aa55>[1</color>,<color=#33aa55>2]</color>,",
		"  <color=#3c3cff>\"Child\"</color>: <color=#33aa55>{</color>",
		"    <color=#3c3cff>\"Child2\"</color>: <color=#e06600>{}</color>",
		"  <color=#33aa55>}</color>,",
		"  <color=#3c3cff>\"string\"</color>: <color=#ee3300>\"[]{}\"</color>,",
		"  <color=#3c3cff>\"Boolean\"</color>: <color=#3111aa>true</color>,",
		"<color=#3c3cff>}</color>",
		"",
		"Warstwa zewnętrzna to symetryczna para <color=#3c3cff>{ }</color>.",
		"<color=#3c3cff>\"key\"</color>, <color=#3c3cff>\"array\"</color>, <color=#3c3cff>\"Child\"</color>, <color=#3c3cff>\"Child2\"</color> oraz <color=#3c3cff>\"string\"</color> to klucze.",
		"",
		"<color=#33aa55>1</color>      to liczba,",
		"<color=#33aa55>[ ]</color>     to tablica,",
		"<color=#3111aa>true</color>  to wartość logiczna (Boolean),",
		"<color=#ee3300>\"[]{}\"</color> to ciąg znaków,",
		"<color=#e06600>{}</color>      to obiekt.",
		"",
		"Należy zauważyć, że zewnętrzna symetryczna para <color=#3c3cff>{ }</color> reprezentuje obiekt. W przykładzie pasujące nawiasy klamrowe mają ten sam kolor.",
		"Obiekty i tablice mogą zagnieżdżać w sobie ciągi znaków, liczby, wartości logiczne, tablice, obiekty lub null według tego samego formatu.",
		"",
		"Ponieważ <color=#33aa55>[ ]</color>, <color=#3c3cff>{ }</color> i <color=#ee3300>\" \"</color> występują parami, grupy balansujące (balancing groups) mogą posłużyć do podstawowej weryfikacji poprawności danych JSON.",
		"",
		"W celu uproszczenia problemu, przyjmujemy następujące konwencje:",
		"1. Wykonujemy tylko podstawowe zliczanie par, bez złożonych kontroli formatu.",
		"   *Przykład: { \"key\": [, \"key2\": ] } przejdzie test grup balansujących pomimo błędów formatu.*",
		"2. Symbole wewnątrz ciągów znaków jak <color=#ee3300>\"[]{}\"</color> są ignorowane przy zliczaniu dla grup balansujących.",
		"3. Priorytetem jest podejście nastawione na rozwiązanie (solution-oriented programming) – wystarczy zaliczyć przypadki testowe. Nie jest wymagane tworzenie wyrażenia regularnego sprawdzającego 100% danych JSON.",
		"",
		"<color=#666666>To zadanie jest dość trudne – jeśli sprawia trudności, możesz przejść dalej...</color>",
		"",
		"",
		"Skonstruuj wyrażenie regularne, które przejdzie wszystkie testy po prawej stronie."
	],
	"m_SystemLanguage":"Polish"
}