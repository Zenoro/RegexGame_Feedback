{
	"m_DescList":[
		"コンピュータにおける文字列は、1つ1つの文字が連なって構成されています。エンコード形式が異なると、同じ文字列でも異なるバイナリデータに変換されます。簡略化のため、以下ではデフォルトのエンコード形式を<b>Unicode</b>とします。",
		"",
		"例えば、コードポイント <color=#AB2800>\\u0031</color> は数字の <color=#3c3cff>1</color> に対応します。",
		"<color=#AB2800>\\u</color> はUnicode文字を表し、その後の4桁の16進数が1つのコードポイントを示します。",
		"",
		"例えば、連続する3つのコードポイント <color=#AB2800>\\u0031\\u0032\\u0033</color> は文字列 <color=#3c3cff>123</color> に対応します。",
		"",
		"文字列と文字の観点から見ると、絵文字（Emoji）は魔法の画像ではなく、コンピュータ内部では本質的に特殊なUnicode文字です。",
		"",
		"絵文字の本質は文字です。目に見える1つの絵文字は、1つまたは複数の文字の組み合わせによって構成されています。以下に3つの絵文字の例を示します。",
		"<color=#AB2800>\\uD83D\\uDE04</color>",
		"<img src=Texture/Emoji/SmillFace width=72 height=72>",
		"<color=#AB2800>\\u2763</color>",
		"<img src=Texture/Emoji/Heart width=72 height=72>",
		"<color=#AB2800>\\u2764\\uFE0F\\u200D\\uD83D\\uDD25</color>",
		"<img src=Texture/Emoji/FireHeart width=72 height=72>",
		"",
		"より多くの絵文字記号とそれらに対応するコードポイントは、以下のサイトで検索できます。",
		"[絵文字大全](https://www.emojiall.com/zh-hans/all-emojis)",
		"",
		"正規表現では、<color=#AB2800>\\u0000</color> を使用してコードポイントを強制的に参照することができます。",
		"",
		"<b>UnityのUI.Textは絵文字を表示できないため、テストケースはエスケープモードで確認してください</b>",
		"ここで、いくつか準備された絵文字文字をマッチさせたいと考えています。以下の形式を模倣して、それらを正確にマッチングしてください：",
		"<color=#05C3BA>(</color><color=#AB2800>\\uxxxx </color><color=#05C3BA>| </color><color=#AB2800>\\uxxxx </color><color=#05C3BA>| </color><color=#AB2800>\\uxxxx \\uxxxx</color><color=#05C3BA>)</color>",
		"",
		"全てのテストケースについて、以下の取り決めを設けます：",
		"1. 各テストケースには絵文字は1つだけ含まれます。",
		"2. 各テストケースでは、最初にエスケープ文字 \\uxxxx を入力し、スペースを1つ置き、その後ろに絵文字を入力します。",
		"3. Unity Text は絵文字を表示できないため、絵文字文字は見えません。",
		"",
		"",
		"右側のすべてのテストを通過する正規表現を構築してください。"
	],
	"m_SystemLanguage":"Japanese"
}