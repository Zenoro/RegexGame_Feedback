{
	"m_DescList":[
		"之前有提到过，<color=#05C3BA>(?</color><color=#AB2800><= subexpression </color><color=#05C3BA>)</color> 为零宽度正回顾后发断言，会<b>匹配并消耗</b>匹配的内容。",
		"",
		"例如，使用 <color=#05C3BA>(?</color><color=#AB2800><= 2 </color><color=#05C3BA>)</color><color=#AB2800>3</color> 匹配下列示例，",
		"<color=#3c3cff>1234</color> 结果为: <color=#666666>12</color><color=#3c3cff>3</color><color=#666666>4</color>",
		"<color=#3c3cff>34</color> 不匹配",
		"",
		"<color=#05C3BA>(?</color><color=#AB2800><= 2 </color><color=#05C3BA>)</color><color=#AB2800>3</color> 初次学习正则表达式时，可能<color=#ee3300>错误</color>的理解为：",
		"1. 正则表达式先匹配 <color=#AB2800>23</color>",
		"2. 最终的结果中移除 <color=#AB2800>2</color>",
		"",
		"在下列示例中，使用下面两个正则表达式分别匹配以空格开头的字符串 \" <color=#3c3cff>2</color>\"",
		"<color=#05C3BA>(?</color><color=#AB2800><= </color><color=#FF68DD>\\A </color><color=#05C3BA>| </color><color=#FF68DD>\\A</color><color=#3173FF>\\s</color><color=#FF68DD>* </color><color=#05C3BA>)</color><color=#AB2800>2</color> 结果为: \"<color=#AB2800> 2</color>\"",
		"<color=#FF68DD>\\A</color><color=#05C3BA>(?</color><color=#AB2800><= </color><color=#3173FF>\\s</color><color=#FF68DD>* </color><color=#05C3BA>)</color><color=#AB2800>2</color> 不匹配",
		"",
		"这个测试用例证明了 零宽度正回顾后发断言 的工作机制，不是简单的先匹配后移除部分内容。",
		"",
		"正则表达式实际上是<b>分步工作</b>的，以 <color=#05C3BA>(?</color><color=#AB2800><= </color><color=#FF68DD>\\A </color><color=#05C3BA>| </color><color=#FF68DD>\\A</color><color=#3173FF>\\s</color><color=#FF68DD>* </color><color=#05C3BA>)</color><color=#AB2800>2</color> 为例：",
		"1. 查找 <color=#AB2800>2</color>",
		"2. 在当前正则状态机的位置，从右向左<b>回顾</b>查找 <color=#05C3BA>(?</color><color=#AB2800><= </color><color=#FF68DD>\\A </color><color=#05C3BA>| </color><color=#FF68DD>\\A</color><color=#3173FF>\\s</color><color=#FF68DD>* </color><color=#05C3BA>)</color>。此时<color=#3c3cff>2</color>之前的字符为字符串开头外加一个空格，与 <color=#FF68DD>\\A</color><color=#3173FF>\\s</color><color=#FF68DD>*</color> 匹配",
		"",
		"再来分析 <color=#FF68DD>\\A</color><color=#05C3BA>(?</color><color=#AB2800><= </color><color=#3173FF>\\s</color><color=#FF68DD>* </color><color=#05C3BA>)</color><color=#AB2800>2</color>：",
		"1. 查找 <color=#FF68DD>\\A</color>",
		"2. 在查找到的位置，从右向左<b>回顾</b>查找 <color=#05C3BA>(?</color><color=#AB2800><= </color><color=#3173FF>\\s</color><color=#FF68DD>* </color><color=#05C3BA>)</color>。此时正则状态机的位置在字符串开头，没有比开头更靠前的内容了，因此匹配失败",
		"",
		"因其<b>回顾</b>的特点，<color=#05C3BA>(?</color><color=#AB2800><= subexpression </color><color=#05C3BA>)</color> 被称为 零宽度正<b>回顾</b>后发断言",
		"",
		"",
		"INI文件中，所有的参数都是以节（section）为单位结合在一起的。",
		"所有节的声明都是独占一行，并且section名字都被方括号包围着 <color=#3c3cff>[]</color> 。",
		"在section声明后的所有parameters都属于该节。",
		"",
		"<img src=Texture/Task/IniSection width=337 height=167>",
		"",
		"节的声明就像上图中的 <color=#3c3cff>[Section2]</color>",
		"",
		"",
		"现在期望匹配节的内容，做出如下约定：",
		"1. 每个测试用例为独立的一行",
		"2. 如果这一行是节的声明，匹配完整的节的声明，从 \"[\" 到 \"]\"，不包含 \"[\" 之前的内容",
		"3. 节声明之前可能存在空白字符，但匹配的结果中<b>不包含</b>空白字符",
		"4. 如果 \"[\" 之前包含非空白字符，则不匹配此项",
		"",
		"",
		"请构造一个正则表达式使之通过右侧所有测试。"
	],
	"m_SystemLanguage":"ChineseSimplified"
}