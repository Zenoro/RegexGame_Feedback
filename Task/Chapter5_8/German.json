{
	"m_DescList":[
		"Wie bereits erwähnt, stellt <color=#05C3BA>(?</color><color=#AB2800><= subexpression </color><color=#05C3BA>)</color> eine nullbreite positive Look-Behind-Assertion dar, die den übereinstimmenden Inhalt <b>abgleicht und verbraucht</b>.  ",
		"",
		"Beispielsweise bei Verwendung von <color=#05C3BA>(?</color><color=#AB2800><= 2 </color><color=#05C3BA>)</color><color=#AB2800>3</color> für folgende Beispiele:  ",
		"<color=#3c3cff>1234</color> ergibt: <color=#666666>12</color><color=#3c3cff>3</color><color=#666666>4</color>  ",
		"<color=#3c3cff>34</color> findet keine Übereinstimmung  ",
		"",
		"Beim ersten Erlernen regulärer Ausdrücke könnte man <color=#05C3BA>(?</color><color=#AB2800><= 2 </color><color=#05C3BA>)</color><color=#AB2800>3</color> <color=#ee3300>fälschlicherweise</color> interpretieren als:  ",
		"1. Der reguläre Ausdruck gleicht zuerst <color=#AB2800>23</color> ab  ",
		"2. Entfernt dann <color=#AB2800>2</color> aus dem Endergebnis  ",
		"",
		"In folgenden Beispielen gleichen zwei Regex-Muster den mit Leerzeichen beginnenden String \" <color=#3c3cff>2</color>\" ab:  ",
		"<color=#05C3BA>(?</color><color=#AB2800><= </color><color=#FF68DD>\\A </color><color=#05C3BA>| </color><color=#FF68DD>\\A</color><color=#3173FF>\\s</color><color=#FF68DD>* </color><color=#05C3BA>)</color><color=#AB2800>2</color> ergibt: \"<color=#AB2800> 2</color>\"  ",
		"<color=#FF68DD>\\A</color><color=#05C3BA>(?</color><color=#AB2800><= </color><color=#3173FF>\\s</color><color=#FF68DD>* </color><color=#05C3BA>)</color><color=#AB2800>2</color> schlägt fehl  ",
		"",
		"Dieser Testfall beweist, dass nullbreite Look-Behind-Assertions nicht einfach partiell abgleichen und dann Inhalte entfernen.  ",
		"",
		"Reguläre Ausdrücke arbeiten tatsächlich <b>schrittweise</b>. Am Beispiel <color=#05C3BA>(?</color><color=#AB2800><= </color><color=#FF68DD>\\A </color><color=#05C3BA>| </color><color=#FF68DD>\\A</color><color=#3173FF>\\s</color><color=#FF68DD>* </color><color=#05C3BA>)</color><color=#AB2800>2</color>:  ",
		"1. Positioniere <color=#AB2800>2</color>  ",
		"2. Führe an dieser Position eine <b>Rückwärtssuche</b> für <color=#05C3BA>(?</color><color=#AB2800><= </color><color=#FF68DD>\\A </color><color=#05C3BA>| </color><color=#FF68DD>\\A</color><color=#3173FF>\\s</color><color=#FF68DD>* </color><color=#05C3BA>)</color> durch. Die Zeichen vor <color=#3c3cff>2</color> sind String-Start plus Leerzeichen – entspricht <color=#FF68DD>\\A</color><color=#3173FF>\\s</color><color=#FF68DD>*</color> ",
		"",
		"Analyse von <color=#FF68DD>\\A</color><color=#05C3BA>(?</color><color=#AB2800><= </color><color=#3173FF>\\s</color><color=#FF68DD>* </color><color=#05C3BA>)</color><color=#AB2800>2</color>:  ",
		"1. Positioniere <color=#FF68DD>\\A</color> (String-Anfang)  ",
		"2. Führe hier die <b>Rückwärtssuche</b> für <color=#05C3BA>(?</color><color=#AB2800><= </color><color=#3173FF>\\s</color><color=#FF68DD>* </color><color=#05C3BA>)</color> aus. Vor der Position existiert kein Inhalt – daher Fehlschlag.  ",
		"",
		"Aufgrund dieses <b>rückwärtsgerichteten</b> Charakters heißt <color=#05C3BA>(?</color><color=#AB2800><= subexpression </color><color=#05C3BA>)</color> nullbreite positive <b>Look-Behind</b>-Assertion.  ",
		"",
		"In INI-Dateien sind alle Parameter in Abschnitten (Sections) gruppiert.  ",
		"Abschnittsdeklarationen stehen in eigenen Zeilen, eingeschlossen in eckige Klammern <color=#3c3cff>[]</color>.  ",
		"Alle nachfolgenden Parameter gehören zum deklarierten Abschnitt.  ",
		"",
		"<img src=Texture/Task/IniSection width=337 height=167>  ",
		"",
		"Abschnittsdeklarationen erscheinen wie <color=#3c3cff>[Section2]</color> im obigen Bild.",
		"",
		"Für das Abgleichen von Abschnittsinhalten gelten folgende Regeln:  ",
		"1. Jeder Testfall ist eine eigenständige Zeile  ",
		"2. Bei Abschnittsdeklarationen: Vollständige Deklaration von \"[\" bis \"]\" abgleichen (ohne vorangestellte Inhalte)  ",
		"3. Vorangestellte Leerzeichen sind möglich, müssen aber im Ergebnis <b>ausgeschlossen</b> werden  ",
		"4. Bei Nicht-Leerzeichen vor \"[\": Keine Übereinstimmung  ",
		"",
		"",
		"Erstellen Sie einen regulären Ausdruck, der alle Testfälle rechts besteht. "
	],
	"m_SystemLanguage":"German"
}